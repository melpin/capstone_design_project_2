<엔트로피 관련 파이썬 내 코드 설명!>

1. bytez : 데이터를 더 빨리 일할 수 있도록 도와주는 소프트웨어 스타트업이다.
2. Lief library : cross platform library, pe, elf etc.을 구문 분석하는데 사용하는 라이브러리
 분석, 수정, 새 pe 빌드, 디스크에 저장 
3. bincount
 : 
1차원 배열과 양의 정수형인 객체에 적용합니다.
객체의 원소중 0부터 최대값 범위의 정수값을 올림차순으로 정리한 뒤 각 원소에 대한 빈도수를 반환합니다.

>>> x=np.random.randint(1, 10, 50)
>>> x
array([7, 9, 5, 8, 1, 6, 8, 5, 1, 3, 2, 6, 2, 3, 3, 8, 6, 5, 9, 5, 9, 8, 8,
       9, 8, 5, 7, 1, 3, 1, 2, 6, 4, 9, 3, 6, 3, 5, 2, 7, 1, 1, 2, 2, 5, 9,
       7, 3, 8, 3])
>>> [min(x), max(x)]
[1, 9]

bincount()는 0 부터 객체x의 최대값인 9까지 각 원소의 빈도수를 계산합니다.
아래의 결과에서 0은 없기 때문에 빈도수는 0입니다.
>>> np.bincount(x)
array([0, 6, 6, 8, 1, 7, 5, 4, 7, 6], dtype=int64)
4. histogram
 : np.histogram(객체, binds)
객체를 구간수로 구분하여 각 구간수에 속하는 빈도수를 반환한다.
bins=정수일 경우에는 구간수를 나타내고
bins=연속열 일경우는 오른쪽 구간값을 나타낸다.
예를들어 bins=[0, 1, 2, 3]일 경우 (0, 1], (1, 2], (2, 3]

>>> x=np.random.randint(1, 100, 3000)
>>> y=np.linspace(1, 100, 6)
>>> np.histogram(x, y)
(array([634, 613, 576, 607, 570], dtype=int64),
 array([   1. ,   20.8,   40.6,   60.4,   80.2,  100. ]))
5. hashlib는 2.5 이상에서는 포함되어있다.
6. histogram : 도수분포도를 막대그래프로 표현해줌
7. np.astype : 지정된 형식으로 캐스트된 배열의 복사본
8. ravel() : 차원 변경(reshape(), flatten()과 비슷함)
9. frombuffer : binary 파일을 읽어오는 가장 쉬운 방법
numpy.frombuffer(buffer, dtype=float, count=-1, offset=0)
buffer - 데이터, dtype - 데이터 타입 기본 값 float, count - 읽어올 데이터의 수 기본값 -1로 전체 값을 읽어옴, offest - 바이너리 값을 읽어올 시작 위치 기본 값 0
10.